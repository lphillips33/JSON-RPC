//include the source docs for gson 2.6.2
//include the source docs for apache http


import java.net.URI;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.List;

import org.apache.http.Header;
import org.apache.http.HeaderElement;
import org.apache.http.HeaderElementIterator;
import org.apache.http.HttpHeaders;
import org.apache.http.HttpRequest;
import org.apache.http.HttpResponse;
import org.apache.http.HttpVersion;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.message.BasicHeaderElementIterator;
import org.apache.http.message.BasicHttpRequest;

import com.google.gson.*;

public class RPCClientMain {

	public static void main(String[] args) throws URISyntaxException {
		// TODO Auto-generated method stub

		
		
		//HTTP stuff here
		
		//Doing stuff do a database, so use POST
		
		HttpGet httpget = new HttpGet(
			     "http://www.google.com/search?hl=en&q=httpclient&btnG=Google+Search&aq=f&oq=");
		
		//takes in request line
		
		// Request-Line = Method SP Request-URI SP HTTP-Version CRLF
		
		/*
		 * 
		 * https://hc.apache.org/httpcomponents-core-ga/httpcore/
		 * apidocs/org/apache/http/message/BasicHttpRequest.html
		 */
		HttpRequest request = new BasicHttpRequest("POST", "/", HttpVersion.HTTP_1_1);
		
		
		/*
		 * https://stackoverflow.com/questions/14551194/
		 * how-are-parameters-sent-in-an-http-post-request
		 * 
		 */
		
		//Ask what header files we should have 
		
		request.addHeader("Host", "Logan's mac");
		request.addHeader("Content-Type", "application/json");
		request.addHeader("Content-Length","322");
		
		System.out.println(request.getRequestLine().getMethod());
		System.out.println(request.getRequestLine().getUri());
		System.out.println(request.getRequestLine().getProtocolVersion());
		System.out.println(request.getRequestLine().toString());
		
		/*
		HeaderElementIterator it = new BasicHeaderElementIterator(
			    request.headerIterator("Set-Cookie"));

			while (it.hasNext()) {
			    HeaderElement elem = it.nextElement(); 
			    System.out.println(elem.getName() + " = " + elem.getValue());
			    NameValuePair[] params = elem.getParameters();
			    for (int i = 0; i < params.length; i++) {
			        System.out.println(" " + params[i]);
			    }
			}
		*/
		
		System.out.println();
		System.out.println("LISTING THE HEADERS");
		System.out.println();
		
		List<Header> httpHeaders = Arrays.asList(request.getAllHeaders());
		
		for(Header header : httpHeaders) {
			System.out.println(header.getName() + ":" + header.getValue());
		}
		
		
		System.out.println();
		System.out.println();
		System.out.println();
			
		
		HttpPost post = new HttpPost("/");
		System.out.println(post.getMethod());
		
		
		
		//JSON stuff here
		
		
		Gson gson = new GsonBuilder().setPrettyPrinting().create();
	
		//create a json object that will be the body of the http request to view items
		JsonObject requestGetItems = new JsonObject();
		requestGetItems.addProperty("version", "1.0");
		requestGetItems.addProperty("methodName", "getItems");
		
		
		/**
		 * https://static.javadoc.io/com.google.code.gson/gson/
		 * 2.6.2/com/google/gson/JsonArray.html#add-java.lang.String-
		 * 
		 */
		
		System.out.println("REQUESTING ITEMS");
		
		JsonArray jArray = new JsonArray();
		
		jArray.add(new String("books"));
		jArray.add(new String("pillows"));
		jArray.add(new String("fornite skins"));
		
		requestGetItems.add("params", jArray);
		
		
		String json = gson.toJson(requestGetItems);
		System.out.println(json);
		
		System.out.println();
		System.out.println();
		System.out.println();
		
		System.out.println("PURCHASING ITEMS");
		
		JsonObject requestPurchaseItems = new JsonObject();
		requestPurchaseItems.addProperty("version", "1.0");
		requestPurchaseItems.addProperty("methodName", "purchase");
		
		JsonArray purchaseArray = new JsonArray();
		purchaseArray.add(new String("book"));
		purchaseArray.add(new Integer(5));
		
		requestPurchaseItems.add("params", purchaseArray);
		
		String purchaseJson = gson.toJson(requestPurchaseItems);
		System.out.println(purchaseJson);
		
		
		// read the response back from the server
		
		JsonObject response = new JsonObject();
		
		response.addProperty("version", 1.0);
		
		//each element is a json object consisting of name, price, stock
		JsonArray returnArray = new JsonArray();
		
		JsonObject item1Info = new JsonObject();
		item1Info.addProperty("name", "Rant");
		item1Info.addProperty("price", 13.99);
		item1Info.addProperty("stock", 5);
		
		
		returnArray.add(item1Info);
		
		
		
		
	}

}
